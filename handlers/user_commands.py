# handlers/user_commands.py
import logging
from telegram import Update, BotCommand
from telegram.ext import ContextTypes
from telegram.constants import ParseMode

from .auth_middleware import user_required
from config import CONTROL_ADMIN_IDS

logger = logging.getLogger(__name__)

@user_required
async def start_user(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    """–ö–æ–º–∞–Ω–¥–∞ /start –¥–ª—è –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π."""
    user = update.effective_user
    user_id = user.id
    first_name = user.first_name or user.username or '–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å'
    
    # üÜï –ó–ê–ü–ò–°–´–í–ê–ï–ú –í –ü–û–¢–ï–ù–¶–ò–ê–õ–¨–ù–´–ï –ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–ò
    logger.info(f"üîß START_USER –≤—ã–∑–≤–∞–Ω –¥–ª—è {user_id}")
    from user_database import user_db
    logger.info(f"üîß –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º user_db")
    
    result = user_db.add_potential_user(
        user_id=user_id,
        username=user.username,
        first_name=user.first_name,
        last_name=user.last_name
    )
    logger.info(f"üîß add_potential_user –≤–µ—Ä–Ω—É–ª: {result}")
    logger.info(f"üîß –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user_id} –∑–∞–ø–∏—Å–∞–Ω –≤ potential_users")
    
    # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω–æ–µ –º–µ–Ω—é
    await setup_user_menu(context, user_id)
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º
    if user_id in CONTROL_ADMIN_IDS:  # –ò–°–ü–†–ê–í–õ–ï–ù–û
        welcome_message = (
            f"üëë –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å, –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä {first_name}!\n\n"
            "‚úÖ –£ –≤–∞—Å –µ—Å—Ç—å –ø—Ä–∞–≤–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞.\n"
            "üìä –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ /admin –¥–ª—è –¥–æ—Å—Ç—É–ø–∞ –∫ –ø–∞–Ω–µ–ª–∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è.\n"
            "üí° –í—Å–µ –≤–∞—à–∏ —Å–æ–æ–±—â–µ–Ω–∏—è –±—É–¥—É—Ç –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω—ã –≤—Å–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º."
        )
    else:
        welcome_message = (
            f"üéâ –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å, {first_name}!\n\n"
            "‚úÖ –£ –≤–∞—Å –µ—Å—Ç—å –¥–æ—Å—Ç—É–ø –∫ –±–æ—Ç—É.\n"
            "üìù –í—ã –±—É–¥–µ—Ç–µ –ø–æ–ª—É—á–∞—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ —Ç–æ–∫–µ–Ω–∞—Ö –∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É.\n"
            "‚ÑπÔ∏è –î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã: /start, /help"
        )
    
    await update.message.reply_html(welcome_message)
    logger.info(f"–ö–æ–º–∞–Ω–¥–∞ /start –≤—ã–ø–æ–ª–Ω–µ–Ω–∞ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user_id}")


@user_required
async def help_user(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    """–ö–æ–º–∞–Ω–¥–∞ /help –¥–ª—è –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π."""
    user_id = update.effective_user.id
    
    if user_id in CONTROL_ADMIN_IDS:  # –ò–°–ü–†–ê–í–õ–ï–ù–û
        help_message = (
            "üîß *–°–ø—Ä–∞–≤–∫–∞ –¥–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞:*\n\n"
            "üìä `/admin` - –ø–∞–Ω–µ–ª—å —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è\n"
            "üë• –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏\n"
            "üìà –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Ç–æ–∫–µ–Ω–∞–º–∏\n"
            "üìù –†–∞—Å—Å—ã–ª–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏–π –≤—Å–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º\n\n"
            "üí° *–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–µ —Ñ—É–Ω–∫—Ü–∏–∏:*\n"
            "‚Ä¢ –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ —Ç–æ–∫–µ–Ω–æ–≤\n" 
            "‚Ä¢ –£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ —Ä–æ—Å—Ç–µ\n"
            "‚Ä¢ –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∫–∞–∂–¥—ã–µ 12 —á–∞—Å–æ–≤"
        )
    else:
        help_message = (
            "‚ÑπÔ∏è *–°–ø—Ä–∞–≤–∫–∞ –ø–æ –±–æ—Ç—É:*\n\n"
            "ü§ñ –≠—Ç–æ—Ç –±–æ—Ç –æ—Ç—Å–ª–µ–∂–∏–≤–∞–µ—Ç —Ç–æ–∫–µ–Ω—ã –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ –∏—Ö —Ä–æ—Å—Ç–µ.\n\n"
            "üìä *–ß—Ç–æ –≤—ã –ø–æ–ª—É—á–∞–µ—Ç–µ:*\n"
            "‚Ä¢ –£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ —Ä–æ—Å—Ç–µ —Ç–æ–∫–µ–Ω–æ–≤ (x2, x3, x4...)\n"
            "‚Ä¢ –°—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –ø–æ —Ç–æ–∫–µ–Ω–∞–º –∫–∞–∂–¥—ã–µ 12 —á–∞—Å–æ–≤\n"
            "‚Ä¢ –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ—Ç –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞\n\n"
            "üîß *–î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:*\n"
            "‚Ä¢ `/start` - –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ\n"
            "‚Ä¢ `/help` - —ç—Ç–∞ —Å–ø—Ä–∞–≤–∫–∞"
        )
    
    await update.message.reply_markdown(help_message)
    logger.info(f"–ö–æ–º–∞–Ω–¥–∞ /help –≤—ã–ø–æ–ª–Ω–µ–Ω–∞ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user_id}")

async def handle_unauthorized(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ –∑–∞–ø—Ä–æ—Å–æ–≤ –æ—Ç –Ω–µ–∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π."""
    user = update.effective_user
    user_id = user.id
    first_name = user.first_name or user.username or '–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å'
    
    # üÜï –î–û–ë–ê–í–ò–¢–¨: –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –Ω–µ–∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω–Ω—ã—Ö –≤ –ø–æ—Ç–µ–Ω—Ü–∏–∞–ª—å–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏
    logger.info(f"üîß HANDLE_UNAUTHORIZED –≤—ã–∑–≤–∞–Ω –¥–ª—è {user_id}")
    from user_database import user_db
    
    result = user_db.add_potential_user(
        user_id=user_id,
        username=user.username,
        first_name=user.first_name,
        last_name=user.last_name
    )
    logger.info(f"üîß –ù–µ–∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω–Ω—ã–π {user_id} –∑–∞–ø–∏—Å–∞–Ω –≤ potential_users: {result}")
    
    # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–Ω–æ–µ –º–µ–Ω—é –¥–ª—è –Ω–µ–∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω–Ω—ã—Ö
    await setup_user_menu(context, user_id)
    
    unauthorized_message = (
        f"‚ùå –î–æ—Å—Ç—É–ø –∑–∞–ø—Ä–µ—â–µ–Ω, {first_name}.\n\n"
        "üîí –£ –≤–∞—Å –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–∞ –∫ –ø—Ä–∏–≤–∞—Ç–Ω–æ–º—É –∫–∞–Ω–∞–ª—É.\n"
        "üìû –î–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –¥–æ—Å—Ç—É–ø–∞ –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É.\n\n"
        f"‚ÑπÔ∏è –í–∞—à Telegram ID: `{user_id}`\n"
        "(–û—Ç–ø—Ä–∞–≤—å—Ç–µ —ç—Ç–æ—Ç ID –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É)"
    )
    
    await update.message.reply_html(unauthorized_message)
    logger.info(f"–û—Ç–∫–∞–∑ –≤ –¥–æ—Å—Ç—É–ø–µ –¥–ª—è –Ω–µ–∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user_id}")

async def setup_user_menu(context: ContextTypes.DEFAULT_TYPE, user_id: int) -> None:
    """–£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω–æ–µ –º–µ–Ω—é –∫–æ–º–∞–Ω–¥ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ä–æ–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è."""
    try:
        from .auth_middleware import get_user_db
        
        # –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ä–æ–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        if user_id in CONTROL_ADMIN_IDS:  # –ò–°–ü–†–ê–í–õ–ï–ù–û
            # –ú–µ–Ω—é –¥–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
            commands = [
                BotCommand("start", "–≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é"),
                BotCommand("admin", "–∞–¥–º–∏–Ω –ø–∞–Ω–µ–ª—å"),
                BotCommand("help", "—Å–ø—Ä–∞–≤–∫–∞")
            ]
        elif get_user_db().is_user_authorized(user_id):
            # –ú–µ–Ω—é –¥–ª—è –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            commands = [
                BotCommand("start", "–≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é"),
                BotCommand("help", "—Å–ø—Ä–∞–≤–∫–∞")
            ]
        else:
            # –ú–µ–Ω—é –¥–ª—è –Ω–µ–∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            commands = [
                BotCommand("start", "–≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é"),
                BotCommand("help", "—Å–ø—Ä–∞–≤–∫–∞")
            ]
        
        # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∫–æ–º–∞–Ω–¥—ã –¥–ª—è –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        await context.bot.set_my_commands(
            commands=commands,
            scope={'type': 'chat', 'chat_id': user_id}
        )
        
        logger.info(f"–ü–µ—Ä—Å–æ–Ω–∞–ª—å–Ω–æ–µ –º–µ–Ω—é —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user_id}: {len(commands)} –∫–æ–º–∞–Ω–¥")
        
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —É—Å—Ç–∞–Ω–æ–≤–∫–µ –º–µ–Ω—é –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user_id}: {e}")